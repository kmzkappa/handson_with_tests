//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace NXMobileHandsOn.ServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NXParameterBase", Namespace="http://schemas.datacontract.org/2004/07/SSJKK.NX.Framework.WebService.Common")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NXMobileHandsOn.ServiceReference.NXParameterBaseV2))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NXMobileHandsOn.ServiceReference.NLC00100SICoreKaiData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NXMobileHandsOn.ServiceReference.NLC00100SIParamV2))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NXMobileHandsOn.ServiceReference.NLC00100SIParam))]
    public partial class NXParameterBase : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AsyncFlgField;
        
        private string AsyncKeyField;
        
        private string KaiCodeField;
        
        private System.DateTime LoginDateField;
        
        private string PollingKbnField;
        
        private int ResultStatusField;
        
        private string UsrIDField;
        
        private System.Collections.ObjectModel.ObservableCollection<NXMobileHandsOn.ServiceReference.NXClientMessage> clientMessageListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AsyncFlg {
            get {
                return this.AsyncFlgField;
            }
            set {
                if ((object.ReferenceEquals(this.AsyncFlgField, value) != true)) {
                    this.AsyncFlgField = value;
                    this.RaisePropertyChanged("AsyncFlg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AsyncKey {
            get {
                return this.AsyncKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.AsyncKeyField, value) != true)) {
                    this.AsyncKeyField = value;
                    this.RaisePropertyChanged("AsyncKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KaiCode {
            get {
                return this.KaiCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.KaiCodeField, value) != true)) {
                    this.KaiCodeField = value;
                    this.RaisePropertyChanged("KaiCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LoginDate {
            get {
                return this.LoginDateField;
            }
            set {
                if ((this.LoginDateField.Equals(value) != true)) {
                    this.LoginDateField = value;
                    this.RaisePropertyChanged("LoginDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PollingKbn {
            get {
                return this.PollingKbnField;
            }
            set {
                if ((object.ReferenceEquals(this.PollingKbnField, value) != true)) {
                    this.PollingKbnField = value;
                    this.RaisePropertyChanged("PollingKbn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResultStatus {
            get {
                return this.ResultStatusField;
            }
            set {
                if ((this.ResultStatusField.Equals(value) != true)) {
                    this.ResultStatusField = value;
                    this.RaisePropertyChanged("ResultStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UsrID {
            get {
                return this.UsrIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UsrIDField, value) != true)) {
                    this.UsrIDField = value;
                    this.RaisePropertyChanged("UsrID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<NXMobileHandsOn.ServiceReference.NXClientMessage> clientMessageList {
            get {
                return this.clientMessageListField;
            }
            set {
                if ((object.ReferenceEquals(this.clientMessageListField, value) != true)) {
                    this.clientMessageListField = value;
                    this.RaisePropertyChanged("clientMessageList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NXParameterBaseV2", Namespace="http://schemas.datacontract.org/2004/07/SSJKK.NX.Framework.WebService.Common")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NXMobileHandsOn.ServiceReference.NLC00100SICoreKaiData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NXMobileHandsOn.ServiceReference.NLC00100SIParamV2))]
    public partial class NXParameterBaseV2 : NXMobileHandsOn.ServiceReference.NXParameterBase {
        
        private string EtherNetField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EtherNet {
            get {
                return this.EtherNetField;
            }
            set {
                if ((object.ReferenceEquals(this.EtherNetField, value) != true)) {
                    this.EtherNetField = value;
                    this.RaisePropertyChanged("EtherNet");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NLC00100SICoreKaiData", Namespace="http://schemas.datacontract.org/2004/07/SSJKK.NX.SystemCommon.CM.WebService")]
    public partial class NLC00100SICoreKaiData : NXMobileHandsOn.ServiceReference.NXParameterBaseV2 {
        
        private System.Collections.ObjectModel.ObservableCollection<NXMobileHandsOn.ServiceReference.NLC00100SICoreKaiListParam> CoreKaiListPCParamListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<NXMobileHandsOn.ServiceReference.NLC00100SICoreKaiListParam> CoreKaiListPCParamList {
            get {
                return this.CoreKaiListPCParamListField;
            }
            set {
                if ((object.ReferenceEquals(this.CoreKaiListPCParamListField, value) != true)) {
                    this.CoreKaiListPCParamListField = value;
                    this.RaisePropertyChanged("CoreKaiListPCParamList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NLC00100SIParamV2", Namespace="http://schemas.datacontract.org/2004/07/SSJKK.NX.SystemCommon.CM.WebService")]
    public partial class NLC00100SIParamV2 : NXMobileHandsOn.ServiceReference.NXParameterBaseV2 {
        
        private System.Collections.ObjectModel.ObservableCollection<string> AsyncServiceListField;
        
        private string CoreUserNameField;
        
        private NXMobileHandsOn.ServiceReference.NXAuthenticationKey NshKeyField;
        
        private int PollingGapField;
        
        private string PswdField;
        
        private string PswdStatKbnField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> AsyncServiceList {
            get {
                return this.AsyncServiceListField;
            }
            set {
                if ((object.ReferenceEquals(this.AsyncServiceListField, value) != true)) {
                    this.AsyncServiceListField = value;
                    this.RaisePropertyChanged("AsyncServiceList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoreUserName {
            get {
                return this.CoreUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CoreUserNameField, value) != true)) {
                    this.CoreUserNameField = value;
                    this.RaisePropertyChanged("CoreUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NXMobileHandsOn.ServiceReference.NXAuthenticationKey NshKey {
            get {
                return this.NshKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.NshKeyField, value) != true)) {
                    this.NshKeyField = value;
                    this.RaisePropertyChanged("NshKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PollingGap {
            get {
                return this.PollingGapField;
            }
            set {
                if ((this.PollingGapField.Equals(value) != true)) {
                    this.PollingGapField = value;
                    this.RaisePropertyChanged("PollingGap");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pswd {
            get {
                return this.PswdField;
            }
            set {
                if ((object.ReferenceEquals(this.PswdField, value) != true)) {
                    this.PswdField = value;
                    this.RaisePropertyChanged("Pswd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PswdStatKbn {
            get {
                return this.PswdStatKbnField;
            }
            set {
                if ((object.ReferenceEquals(this.PswdStatKbnField, value) != true)) {
                    this.PswdStatKbnField = value;
                    this.RaisePropertyChanged("PswdStatKbn");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NLC00100SIParam", Namespace="http://schemas.datacontract.org/2004/07/SSJKK.NX.SystemCommon.CM.WebService")]
    public partial class NLC00100SIParam : NXMobileHandsOn.ServiceReference.NXParameterBase {
        
        private System.Collections.ObjectModel.ObservableCollection<string> AsyncServiceListField;
        
        private NXMobileHandsOn.ServiceReference.NXAuthenticationKey NshKeyField;
        
        private int PollingGapField;
        
        private string PswdField;
        
        private string PswdStatKbnField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> AsyncServiceList {
            get {
                return this.AsyncServiceListField;
            }
            set {
                if ((object.ReferenceEquals(this.AsyncServiceListField, value) != true)) {
                    this.AsyncServiceListField = value;
                    this.RaisePropertyChanged("AsyncServiceList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NXMobileHandsOn.ServiceReference.NXAuthenticationKey NshKey {
            get {
                return this.NshKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.NshKeyField, value) != true)) {
                    this.NshKeyField = value;
                    this.RaisePropertyChanged("NshKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PollingGap {
            get {
                return this.PollingGapField;
            }
            set {
                if ((this.PollingGapField.Equals(value) != true)) {
                    this.PollingGapField = value;
                    this.RaisePropertyChanged("PollingGap");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pswd {
            get {
                return this.PswdField;
            }
            set {
                if ((object.ReferenceEquals(this.PswdField, value) != true)) {
                    this.PswdField = value;
                    this.RaisePropertyChanged("Pswd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PswdStatKbn {
            get {
                return this.PswdStatKbnField;
            }
            set {
                if ((object.ReferenceEquals(this.PswdStatKbnField, value) != true)) {
                    this.PswdStatKbnField = value;
                    this.RaisePropertyChanged("PswdStatKbn");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NXClientMessage", Namespace="http://schemas.datacontract.org/2004/07/SSJKK.NX.Framework.WebService.Common")]
    public partial class NXClientMessage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ColumnNameField;
        
        private string KeyDataField;
        
        private string PropertyNameField;
        
        private string StatusCodeField;
        
        private string StatusMessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnName {
            get {
                return this.ColumnNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnNameField, value) != true)) {
                    this.ColumnNameField = value;
                    this.RaisePropertyChanged("ColumnName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeyData {
            get {
                return this.KeyDataField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyDataField, value) != true)) {
                    this.KeyDataField = value;
                    this.RaisePropertyChanged("KeyData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyName {
            get {
                return this.PropertyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyNameField, value) != true)) {
                    this.PropertyNameField = value;
                    this.RaisePropertyChanged("PropertyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusMessage {
            get {
                return this.StatusMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusMessageField, value) != true)) {
                    this.StatusMessageField = value;
                    this.RaisePropertyChanged("StatusMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NXAuthenticationKey", Namespace="http://schemas.datacontract.org/2004/07/SSJKK.NX.Framework.Utility")]
    public partial class NXAuthenticationKey : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string HeaderNameField;
        
        private string HeaderNameSpaceField;
        
        private string KeyField;
        
        private string programIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HeaderName {
            get {
                return this.HeaderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HeaderNameField, value) != true)) {
                    this.HeaderNameField = value;
                    this.RaisePropertyChanged("HeaderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HeaderNameSpace {
            get {
                return this.HeaderNameSpaceField;
            }
            set {
                if ((object.ReferenceEquals(this.HeaderNameSpaceField, value) != true)) {
                    this.HeaderNameSpaceField = value;
                    this.RaisePropertyChanged("HeaderNameSpace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string programID {
            get {
                return this.programIDField;
            }
            set {
                if ((object.ReferenceEquals(this.programIDField, value) != true)) {
                    this.programIDField = value;
                    this.RaisePropertyChanged("programID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NLC00100SICoreKaiListParam", Namespace="http://schemas.datacontract.org/2004/07/SSJKK.NX.SystemCommon.CM.WebService")]
    public partial class NLC00100SICoreKaiListParam : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string UserIDField;
        
        private string kaiCodeField;
        
        private string kaiNameSField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string kaiCode {
            get {
                return this.kaiCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.kaiCodeField, value) != true)) {
                    this.kaiCodeField = value;
                    this.RaisePropertyChanged("kaiCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string kaiNameS {
            get {
                return this.kaiNameSField;
            }
            set {
                if ((object.ReferenceEquals(this.kaiNameSField, value) != true)) {
                    this.kaiNameSField = value;
                    this.RaisePropertyChanged("kaiNameS");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.INLC00100SI")]
    public interface INLC00100SI {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INLC00100SI/LogIn", ReplyAction="http://tempuri.org/INLC00100SI/LogInResponse")]
        System.IAsyncResult BeginLogIn(NXMobileHandsOn.ServiceReference.NLC00100SIParam param, System.AsyncCallback callback, object asyncState);
        
        NXMobileHandsOn.ServiceReference.NLC00100SIParam EndLogIn(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INLC00100SI/LogOut", ReplyAction="http://tempuri.org/INLC00100SI/LogOutResponse")]
        System.IAsyncResult BeginLogOut(NXMobileHandsOn.ServiceReference.NLC00100SIParam param, System.AsyncCallback callback, object asyncState);
        
        NXMobileHandsOn.ServiceReference.NLC00100SIParam EndLogOut(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INLC00100SI/GetCoreKaiData", ReplyAction="http://tempuri.org/INLC00100SI/GetCoreKaiDataResponse")]
        System.IAsyncResult BeginGetCoreKaiData(NXMobileHandsOn.ServiceReference.NLC00100SICoreKaiData param, System.AsyncCallback callback, object asyncState);
        
        NXMobileHandsOn.ServiceReference.NLC00100SICoreKaiData EndGetCoreKaiData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INLC00100SI/LogInV2", ReplyAction="http://tempuri.org/INLC00100SI/LogInV2Response")]
        System.IAsyncResult BeginLogInV2(NXMobileHandsOn.ServiceReference.NLC00100SIParamV2 param, System.AsyncCallback callback, object asyncState);
        
        NXMobileHandsOn.ServiceReference.NLC00100SIParamV2 EndLogInV2(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INLC00100SI/Dummy", ReplyAction="http://tempuri.org/INLC00100SI/DummyResponse")]
        System.IAsyncResult BeginDummy(NXMobileHandsOn.ServiceReference.NLC00100SIParam param, System.AsyncCallback callback, object asyncState);
        
        NXMobileHandsOn.ServiceReference.NLC00100SIParam EndDummy(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INLC00100SIChannel : NXMobileHandsOn.ServiceReference.INLC00100SI, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LogInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LogInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public NXMobileHandsOn.ServiceReference.NLC00100SIParam Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((NXMobileHandsOn.ServiceReference.NLC00100SIParam)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LogOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LogOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public NXMobileHandsOn.ServiceReference.NLC00100SIParam Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((NXMobileHandsOn.ServiceReference.NLC00100SIParam)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCoreKaiDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCoreKaiDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public NXMobileHandsOn.ServiceReference.NLC00100SICoreKaiData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((NXMobileHandsOn.ServiceReference.NLC00100SICoreKaiData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LogInV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LogInV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public NXMobileHandsOn.ServiceReference.NLC00100SIParamV2 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((NXMobileHandsOn.ServiceReference.NLC00100SIParamV2)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DummyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DummyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public NXMobileHandsOn.ServiceReference.NLC00100SIParam Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((NXMobileHandsOn.ServiceReference.NLC00100SIParam)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NLC00100SIClient : System.ServiceModel.ClientBase<NXMobileHandsOn.ServiceReference.INLC00100SI>, NXMobileHandsOn.ServiceReference.INLC00100SI {
        
        private BeginOperationDelegate onBeginLogInDelegate;
        
        private EndOperationDelegate onEndLogInDelegate;
        
        private System.Threading.SendOrPostCallback onLogInCompletedDelegate;
        
        private BeginOperationDelegate onBeginLogOutDelegate;
        
        private EndOperationDelegate onEndLogOutDelegate;
        
        private System.Threading.SendOrPostCallback onLogOutCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCoreKaiDataDelegate;
        
        private EndOperationDelegate onEndGetCoreKaiDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetCoreKaiDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginLogInV2Delegate;
        
        private EndOperationDelegate onEndLogInV2Delegate;
        
        private System.Threading.SendOrPostCallback onLogInV2CompletedDelegate;
        
        private BeginOperationDelegate onBeginDummyDelegate;
        
        private EndOperationDelegate onEndDummyDelegate;
        
        private System.Threading.SendOrPostCallback onDummyCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public NLC00100SIClient() : 
                base(NLC00100SIClient.GetDefaultBinding(), NLC00100SIClient.GetDefaultEndpointAddress()) {
        }
        
        public NLC00100SIClient(EndpointConfiguration endpointConfiguration) : 
                base(NLC00100SIClient.GetBindingForEndpoint(endpointConfiguration), NLC00100SIClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public NLC00100SIClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(NLC00100SIClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public NLC00100SIClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(NLC00100SIClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public NLC00100SIClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("CookieContainer を設定できません。バインドに HttpCookieContainerBindingElement が含まれていることを確認してくだ" +
                            "さい。");
                }
            }
        }
        
        public event System.EventHandler<LogInCompletedEventArgs> LogInCompleted;
        
        public event System.EventHandler<LogOutCompletedEventArgs> LogOutCompleted;
        
        public event System.EventHandler<GetCoreKaiDataCompletedEventArgs> GetCoreKaiDataCompleted;
        
        public event System.EventHandler<LogInV2CompletedEventArgs> LogInV2Completed;
        
        public event System.EventHandler<DummyCompletedEventArgs> DummyCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NXMobileHandsOn.ServiceReference.INLC00100SI.BeginLogIn(NXMobileHandsOn.ServiceReference.NLC00100SIParam param, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogIn(param, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NXMobileHandsOn.ServiceReference.NLC00100SIParam NXMobileHandsOn.ServiceReference.INLC00100SI.EndLogIn(System.IAsyncResult result) {
            return base.Channel.EndLogIn(result);
        }
        
        private System.IAsyncResult OnBeginLogIn(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NXMobileHandsOn.ServiceReference.NLC00100SIParam param = ((NXMobileHandsOn.ServiceReference.NLC00100SIParam)(inValues[0]));
            return ((NXMobileHandsOn.ServiceReference.INLC00100SI)(this)).BeginLogIn(param, callback, asyncState);
        }
        
        private object[] OnEndLogIn(System.IAsyncResult result) {
            NXMobileHandsOn.ServiceReference.NLC00100SIParam retVal = ((NXMobileHandsOn.ServiceReference.INLC00100SI)(this)).EndLogIn(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLogInCompleted(object state) {
            if ((this.LogInCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LogInCompleted(this, new LogInCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LogInAsync(NXMobileHandsOn.ServiceReference.NLC00100SIParam param) {
            this.LogInAsync(param, null);
        }
        
        public void LogInAsync(NXMobileHandsOn.ServiceReference.NLC00100SIParam param, object userState) {
            if ((this.onBeginLogInDelegate == null)) {
                this.onBeginLogInDelegate = new BeginOperationDelegate(this.OnBeginLogIn);
            }
            if ((this.onEndLogInDelegate == null)) {
                this.onEndLogInDelegate = new EndOperationDelegate(this.OnEndLogIn);
            }
            if ((this.onLogInCompletedDelegate == null)) {
                this.onLogInCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLogInCompleted);
            }
            base.InvokeAsync(this.onBeginLogInDelegate, new object[] {
                        param}, this.onEndLogInDelegate, this.onLogInCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NXMobileHandsOn.ServiceReference.INLC00100SI.BeginLogOut(NXMobileHandsOn.ServiceReference.NLC00100SIParam param, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogOut(param, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NXMobileHandsOn.ServiceReference.NLC00100SIParam NXMobileHandsOn.ServiceReference.INLC00100SI.EndLogOut(System.IAsyncResult result) {
            return base.Channel.EndLogOut(result);
        }
        
        private System.IAsyncResult OnBeginLogOut(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NXMobileHandsOn.ServiceReference.NLC00100SIParam param = ((NXMobileHandsOn.ServiceReference.NLC00100SIParam)(inValues[0]));
            return ((NXMobileHandsOn.ServiceReference.INLC00100SI)(this)).BeginLogOut(param, callback, asyncState);
        }
        
        private object[] OnEndLogOut(System.IAsyncResult result) {
            NXMobileHandsOn.ServiceReference.NLC00100SIParam retVal = ((NXMobileHandsOn.ServiceReference.INLC00100SI)(this)).EndLogOut(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLogOutCompleted(object state) {
            if ((this.LogOutCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LogOutCompleted(this, new LogOutCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LogOutAsync(NXMobileHandsOn.ServiceReference.NLC00100SIParam param) {
            this.LogOutAsync(param, null);
        }
        
        public void LogOutAsync(NXMobileHandsOn.ServiceReference.NLC00100SIParam param, object userState) {
            if ((this.onBeginLogOutDelegate == null)) {
                this.onBeginLogOutDelegate = new BeginOperationDelegate(this.OnBeginLogOut);
            }
            if ((this.onEndLogOutDelegate == null)) {
                this.onEndLogOutDelegate = new EndOperationDelegate(this.OnEndLogOut);
            }
            if ((this.onLogOutCompletedDelegate == null)) {
                this.onLogOutCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLogOutCompleted);
            }
            base.InvokeAsync(this.onBeginLogOutDelegate, new object[] {
                        param}, this.onEndLogOutDelegate, this.onLogOutCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NXMobileHandsOn.ServiceReference.INLC00100SI.BeginGetCoreKaiData(NXMobileHandsOn.ServiceReference.NLC00100SICoreKaiData param, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCoreKaiData(param, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NXMobileHandsOn.ServiceReference.NLC00100SICoreKaiData NXMobileHandsOn.ServiceReference.INLC00100SI.EndGetCoreKaiData(System.IAsyncResult result) {
            return base.Channel.EndGetCoreKaiData(result);
        }
        
        private System.IAsyncResult OnBeginGetCoreKaiData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NXMobileHandsOn.ServiceReference.NLC00100SICoreKaiData param = ((NXMobileHandsOn.ServiceReference.NLC00100SICoreKaiData)(inValues[0]));
            return ((NXMobileHandsOn.ServiceReference.INLC00100SI)(this)).BeginGetCoreKaiData(param, callback, asyncState);
        }
        
        private object[] OnEndGetCoreKaiData(System.IAsyncResult result) {
            NXMobileHandsOn.ServiceReference.NLC00100SICoreKaiData retVal = ((NXMobileHandsOn.ServiceReference.INLC00100SI)(this)).EndGetCoreKaiData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCoreKaiDataCompleted(object state) {
            if ((this.GetCoreKaiDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCoreKaiDataCompleted(this, new GetCoreKaiDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCoreKaiDataAsync(NXMobileHandsOn.ServiceReference.NLC00100SICoreKaiData param) {
            this.GetCoreKaiDataAsync(param, null);
        }
        
        public void GetCoreKaiDataAsync(NXMobileHandsOn.ServiceReference.NLC00100SICoreKaiData param, object userState) {
            if ((this.onBeginGetCoreKaiDataDelegate == null)) {
                this.onBeginGetCoreKaiDataDelegate = new BeginOperationDelegate(this.OnBeginGetCoreKaiData);
            }
            if ((this.onEndGetCoreKaiDataDelegate == null)) {
                this.onEndGetCoreKaiDataDelegate = new EndOperationDelegate(this.OnEndGetCoreKaiData);
            }
            if ((this.onGetCoreKaiDataCompletedDelegate == null)) {
                this.onGetCoreKaiDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCoreKaiDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetCoreKaiDataDelegate, new object[] {
                        param}, this.onEndGetCoreKaiDataDelegate, this.onGetCoreKaiDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NXMobileHandsOn.ServiceReference.INLC00100SI.BeginLogInV2(NXMobileHandsOn.ServiceReference.NLC00100SIParamV2 param, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogInV2(param, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NXMobileHandsOn.ServiceReference.NLC00100SIParamV2 NXMobileHandsOn.ServiceReference.INLC00100SI.EndLogInV2(System.IAsyncResult result) {
            return base.Channel.EndLogInV2(result);
        }
        
        private System.IAsyncResult OnBeginLogInV2(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NXMobileHandsOn.ServiceReference.NLC00100SIParamV2 param = ((NXMobileHandsOn.ServiceReference.NLC00100SIParamV2)(inValues[0]));
            return ((NXMobileHandsOn.ServiceReference.INLC00100SI)(this)).BeginLogInV2(param, callback, asyncState);
        }
        
        private object[] OnEndLogInV2(System.IAsyncResult result) {
            NXMobileHandsOn.ServiceReference.NLC00100SIParamV2 retVal = ((NXMobileHandsOn.ServiceReference.INLC00100SI)(this)).EndLogInV2(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLogInV2Completed(object state) {
            if ((this.LogInV2Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LogInV2Completed(this, new LogInV2CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LogInV2Async(NXMobileHandsOn.ServiceReference.NLC00100SIParamV2 param) {
            this.LogInV2Async(param, null);
        }
        
        public void LogInV2Async(NXMobileHandsOn.ServiceReference.NLC00100SIParamV2 param, object userState) {
            if ((this.onBeginLogInV2Delegate == null)) {
                this.onBeginLogInV2Delegate = new BeginOperationDelegate(this.OnBeginLogInV2);
            }
            if ((this.onEndLogInV2Delegate == null)) {
                this.onEndLogInV2Delegate = new EndOperationDelegate(this.OnEndLogInV2);
            }
            if ((this.onLogInV2CompletedDelegate == null)) {
                this.onLogInV2CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLogInV2Completed);
            }
            base.InvokeAsync(this.onBeginLogInV2Delegate, new object[] {
                        param}, this.onEndLogInV2Delegate, this.onLogInV2CompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NXMobileHandsOn.ServiceReference.INLC00100SI.BeginDummy(NXMobileHandsOn.ServiceReference.NLC00100SIParam param, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDummy(param, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NXMobileHandsOn.ServiceReference.NLC00100SIParam NXMobileHandsOn.ServiceReference.INLC00100SI.EndDummy(System.IAsyncResult result) {
            return base.Channel.EndDummy(result);
        }
        
        private System.IAsyncResult OnBeginDummy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NXMobileHandsOn.ServiceReference.NLC00100SIParam param = ((NXMobileHandsOn.ServiceReference.NLC00100SIParam)(inValues[0]));
            return ((NXMobileHandsOn.ServiceReference.INLC00100SI)(this)).BeginDummy(param, callback, asyncState);
        }
        
        private object[] OnEndDummy(System.IAsyncResult result) {
            NXMobileHandsOn.ServiceReference.NLC00100SIParam retVal = ((NXMobileHandsOn.ServiceReference.INLC00100SI)(this)).EndDummy(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDummyCompleted(object state) {
            if ((this.DummyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DummyCompleted(this, new DummyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DummyAsync(NXMobileHandsOn.ServiceReference.NLC00100SIParam param) {
            this.DummyAsync(param, null);
        }
        
        public void DummyAsync(NXMobileHandsOn.ServiceReference.NLC00100SIParam param, object userState) {
            if ((this.onBeginDummyDelegate == null)) {
                this.onBeginDummyDelegate = new BeginOperationDelegate(this.OnBeginDummy);
            }
            if ((this.onEndDummyDelegate == null)) {
                this.onEndDummyDelegate = new EndOperationDelegate(this.OnEndDummy);
            }
            if ((this.onDummyCompletedDelegate == null)) {
                this.onDummyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDummyCompleted);
            }
            base.InvokeAsync(this.onBeginDummyDelegate, new object[] {
                        param}, this.onEndDummyDelegate, this.onDummyCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override NXMobileHandsOn.ServiceReference.INLC00100SI CreateChannel() {
            return new NLC00100SIClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_INLC00100SI)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_INLC00100SI)) {
                return new System.ServiceModel.EndpointAddress("https://nxcloud-0-nxv2-b/SuperStreamNX/SC/NLC00100SI.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return NLC00100SIClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_INLC00100SI);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return NLC00100SIClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_INLC00100SI);
        }
        
        private class NLC00100SIClientChannel : ChannelBase<NXMobileHandsOn.ServiceReference.INLC00100SI>, NXMobileHandsOn.ServiceReference.INLC00100SI {
            
            public NLC00100SIClientChannel(System.ServiceModel.ClientBase<NXMobileHandsOn.ServiceReference.INLC00100SI> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginLogIn(NXMobileHandsOn.ServiceReference.NLC00100SIParam param, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = param;
                System.IAsyncResult _result = base.BeginInvoke("LogIn", _args, callback, asyncState);
                return _result;
            }
            
            public NXMobileHandsOn.ServiceReference.NLC00100SIParam EndLogIn(System.IAsyncResult result) {
                object[] _args = new object[0];
                NXMobileHandsOn.ServiceReference.NLC00100SIParam _result = ((NXMobileHandsOn.ServiceReference.NLC00100SIParam)(base.EndInvoke("LogIn", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLogOut(NXMobileHandsOn.ServiceReference.NLC00100SIParam param, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = param;
                System.IAsyncResult _result = base.BeginInvoke("LogOut", _args, callback, asyncState);
                return _result;
            }
            
            public NXMobileHandsOn.ServiceReference.NLC00100SIParam EndLogOut(System.IAsyncResult result) {
                object[] _args = new object[0];
                NXMobileHandsOn.ServiceReference.NLC00100SIParam _result = ((NXMobileHandsOn.ServiceReference.NLC00100SIParam)(base.EndInvoke("LogOut", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCoreKaiData(NXMobileHandsOn.ServiceReference.NLC00100SICoreKaiData param, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = param;
                System.IAsyncResult _result = base.BeginInvoke("GetCoreKaiData", _args, callback, asyncState);
                return _result;
            }
            
            public NXMobileHandsOn.ServiceReference.NLC00100SICoreKaiData EndGetCoreKaiData(System.IAsyncResult result) {
                object[] _args = new object[0];
                NXMobileHandsOn.ServiceReference.NLC00100SICoreKaiData _result = ((NXMobileHandsOn.ServiceReference.NLC00100SICoreKaiData)(base.EndInvoke("GetCoreKaiData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLogInV2(NXMobileHandsOn.ServiceReference.NLC00100SIParamV2 param, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = param;
                System.IAsyncResult _result = base.BeginInvoke("LogInV2", _args, callback, asyncState);
                return _result;
            }
            
            public NXMobileHandsOn.ServiceReference.NLC00100SIParamV2 EndLogInV2(System.IAsyncResult result) {
                object[] _args = new object[0];
                NXMobileHandsOn.ServiceReference.NLC00100SIParamV2 _result = ((NXMobileHandsOn.ServiceReference.NLC00100SIParamV2)(base.EndInvoke("LogInV2", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDummy(NXMobileHandsOn.ServiceReference.NLC00100SIParam param, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = param;
                System.IAsyncResult _result = base.BeginInvoke("Dummy", _args, callback, asyncState);
                return _result;
            }
            
            public NXMobileHandsOn.ServiceReference.NLC00100SIParam EndDummy(System.IAsyncResult result) {
                object[] _args = new object[0];
                NXMobileHandsOn.ServiceReference.NLC00100SIParam _result = ((NXMobileHandsOn.ServiceReference.NLC00100SIParam)(base.EndInvoke("Dummy", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_INLC00100SI,
        }
    }
}
